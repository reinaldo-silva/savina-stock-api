name: Deploy Go App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy-go:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Add SSH key
        run: |
          echo "${{ secrets.EC2_PEM_KEY }}" > pem_file.pem
          chmod 600 pem_file.pem

      - name: Set environment variables
        run: |
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> $GITHUB_ENV
          echo "DB_USER=${{ secrets.DB_USER }}" >> $GITHUB_ENV
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> $GITHUB_ENV
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> $GITHUB_ENV
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> $GITHUB_ENV
          echo "SERVER_PORT=${{ secrets.SERVER_PORT }}" >> $GITHUB_ENV
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> $GITHUB_ENV
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> $GITHUB_ENV
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> $GITHUB_ENV

      - name: Deploy Go app to EC2
        run: |
          ssh -i pem_file.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd /var/www/savina-stock-api

            # Parar e remover o container Docker atual do Go
            docker stop go-app || true
            docker rm go-app || true

            # Puxar as últimas alterações do repositório
            git pull origin main

            # Build da nova imagem Docker da aplicação Go
            docker build -t go-app -f Dockerfile .

            # Verificar as variáveis de ambiente
            echo "DB_HOST=${DB_HOST}"
            echo "DB_USER=${DB_USER}"
            echo "DB_PASSWORD=${DB_PASSWORD}"
            echo "DB_NAME=${DB_NAME}"
            echo "DB_PORT=${DB_PORT}"
            echo "SERVER_PORT=${SERVER_PORT}"
            echo "CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}"
            echo "CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}"
            echo "CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}"

            # Rodar o novo container Docker da aplicação Go com variáveis de ambiente
            docker run -d -p 8080:8080 \
              -e DB_HOST=${DB_HOST} \
              -e DB_USER=${DB_USER} \
              -e DB_PASSWORD=${DB_PASSWORD} \
              -e DB_NAME=${DB_NAME} \
              -e DB_PORT=${DB_PORT} \
              -e SERVER_PORT=${SERVER_PORT} \
              -e CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME} \
              -e CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY} \
              -e CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET} \
              --name go-app go-app
          EOF
